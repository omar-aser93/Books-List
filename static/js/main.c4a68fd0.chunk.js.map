{"version":3,"sources":["contexts/BooksContext.js","components/BookDetail.js","components/BooksList.js","components/BooksForm.js","components/NavBar.js","App.js","index.js"],"names":["BooksContext","createContext","BooksContextProvider","props","useState","title","auther","id","isCompleted","Books","setBooks","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","addBooks","uuid","removeBooks","filter","Book","editBooks","newBooks","map","book","editAuther","completedBook","children","BookDetail","useContext","inputRef","useRef","inputRef2","switcher","setswitcher","handleSubmitBook","e","preventDefault","current","handleSubmitAuther","className","style","textDecoration","onClick","onSubmit","type","defaultValue","ref","required","BooksList","length","key","BooksForm","setTitle","setAuther","placeholder","onChange","target","NavBar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4a68fd0.chunk.js","sourcesContent":["import React, { createContext, useState ,useEffect  } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\n//create the context that will be used on the other components\r\nexport const BooksContext = createContext();\r\n  \r\n//the component that will wrap the components at the app.js\r\nconst BooksContextProvider = (props) => {\r\n  const [Books, setBooks] = useState([               // the stae that will be shared with the other components\r\n    {\r\n      title: \"The lord of the rings\",\r\n      auther: \"J.R.R. Tolkien\",\r\n      id: 0,\r\n      isCompleted: false,\r\n    },\r\n    {\r\n      title: \"Game of thrones\",\r\n      auther: \"George R.R. Martin\",\r\n      id: 1,\r\n      isCompleted: false,\r\n    }, \r\n  ]);\r\n\r\n  // local storage  1-(get data & convert the object to string & store it ) 2-(set new data to localStorage)\r\n  const intialvalue =()=> { if ( localStorage.getItem('books') !== null )\r\n   {JSON.parse(localStorage.getItem('books'))} ;  \r\n   setBooks(JSON.parse(localStorage.getItem('books'))) } ; \r\n\r\n  useEffect(() => { intialvalue()  }, []) ;\r\n  useEffect(()=>{ localStorage.setItem('books',JSON.stringify(Books)) ;  } ,[Books] );\r\n  \r\n    \r\n\r\n  // function to append a new book object to the array of objects of books\r\n  const addBooks = (title, auther) =>\r\n    setBooks([...Books, { title, auther, id: uuid(), isCompleted: false }]);\r\n\r\n  // function to remove book (comparing id's of books to the clicked one if it matches it will not return it)\r\n  const removeBooks = (id) => setBooks(Books.filter((Book) => Book.id !== id));\r\n\r\n  //edit Book by changing (title) value of the current book & pass the other values then save it to the state\r\n  const editBooks = (id , title , auther ) => {\r\n      const newBooks = Books.map(book=>(book.id===id) ? {title,auther,id ,isCompleted: false }:book ) ;\r\n      setBooks(newBooks) } ;\r\n\r\n  //edit auther by changing (auther) value of the current book & pass the other values then save it to the state    \r\n  const editAuther = (id , auther ,title  ) => {\r\n      const newBooks = Books.map(book=>(book.id===id) ? {title,auther,id ,isCompleted: false }:book ) ;\r\n      setBooks(newBooks) } ;  \r\n\r\n   // mark book completed by reversing (isCompleted) value & use it later to change style    \r\n  const completedBook = (id,title, auther , isCompleted) => {\r\n     const newBooks = Books.map(book=>(book.id===id) ?  {title,auther,id ,isCompleted:!isCompleted }:book  );   \r\n      setBooks(newBooks)  };\r\n\r\n  return (      //pass the state & the functions as props to be used at the other components\r\n    <BooksContext.Provider value={{ Books, addBooks, removeBooks, editBooks, editAuther, completedBook  }}  >\r\n      {props.children}\r\n    </BooksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BooksContextProvider;\r\n","import React, { Fragment, useContext, useState, useRef } from \"react\";\r\nimport { BooksContext } from \"../contexts/BooksContext\";\r\n\r\nconst BookDetail = ({ Book }) => {           //recieve the props & destruction\r\n  \r\n  const { removeBooks, editBooks, editAuther, completedBook } = useContext(  BooksContext ); //use context \r\n \r\n  const inputRef = useRef();                     // referance of clicked input (to store the updated value)\r\n  const inputRef2 = useRef();                    // referance of clicked input (to store the updated value)\r\n \r\n  const [switcher, setswitcher] = useState(1);    //state to switch between data & updating forms\r\n\r\n  const showForm = () => {             //showing the data of each book in the list\r\n\r\n    return ( <li>\r\n        <div className=\"title\" style={{ textDecoration: Book.isCompleted ? \"line-through\" : \"\" }}\r\n          onClick={() => setswitcher(2)}  > {Book.title} </div>\r\n\r\n        <div className=\"auther\" style={{ textDecoration: Book.isCompleted ? \"line-through\" : \"\" }}\r\n          onClick={() => setswitcher(3)} > {Book.auther}  </div>\r\n\r\n        <button className=\"f\" onClick={() => completedBook(Book.id,Book.title,Book.auther,Book.isCompleted )}>\r\n                Finished / Unfinished  </button>  \r\n\r\n        <button className=\"r\" onClick={() => removeBooks(Book.id)}>Remove</button>\r\n      </li>   );   };\r\n\r\n\r\n  const editBookForm = () => {        // edit book input after clicking on it using (handleSubmitBook)\r\n    return (\r\n      <form className=\"editForm\" onSubmit={handleSubmitBook}>\r\n        <input type=\"text\" defaultValue={Book.title} ref={inputRef} required />\r\n        <div className=\"auther\">{Book.auther}</div>\r\n      </form>  );  };\r\n\r\n\r\n  const handleSubmitBook = (e) => {       // function to submit the new book title\r\n    e.preventDefault();\r\n    editBooks(Book.id, inputRef.current.value , Book.auther);\r\n    setswitcher(1);   };\r\n\r\n\r\n  const editAutherForm = () => {         // edit auther input after clicking on it using (handleSubmitAuther)\r\n    return (\r\n      <form className=\"editForm\" onSubmit={handleSubmitAuther}>\r\n        <div className=\"title\">{Book.title}</div>\r\n        <input type=\"auther\" defaultValue={Book.auther} ref={inputRef2} required />\r\n      </form>  );   };\r\n\r\n\r\n  const handleSubmitAuther = (e) => {    // function to submit the new book title\r\n    e.preventDefault();\r\n    editAuther(Book.id,inputRef2.current.value , Book.title);\r\n    setswitcher(1);   }; \r\n\r\n\r\n  const toggler = () => {        // function to switch between showing data & showing updating forms\r\n    if (switcher === 1) {\r\n      return showForm();\r\n    } else if (switcher === 2) {\r\n      return editBookForm();\r\n    } else {\r\n      return editAutherForm();\r\n    }   };\r\n\r\n\r\n  return <Fragment>{toggler()} </Fragment>;   // [BookDetail component] will return toggler()\r\n};\r\n\r\nexport default BookDetail;\r\n","import React, { useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/BooksContext\";\r\nimport BookDetail from \"./BookDetail\";\r\n\r\nconst BooksList = () => {\r\n\r\n  const { Books } = useContext(BooksContext);         //get the state from the context\r\n  \r\n  return Books.length ? (               //pass data to the detail component if the state is not empty   \r\n    <div className='list'>     \r\n      <ul>\r\n        {Books.map((Book) => (\r\n          <BookDetail Book={Book} key={Book.id} />                  \r\n        ))}\r\n      </ul>\r\n      <p>* click on the title or auther name to edit it's value</p>\r\n    </div>\r\n  ) : (\r\n    <div className=\"noBooks\">There is no Books to read ... Please enter new ones</div>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","import React, { useContext , useState } from \"react\";\r\nimport { BooksContext } from \"../contexts/BooksContext\";\r\n\r\nconst BooksForm = () => {\r\n    const { addBooks } = useContext(BooksContext);     //get the add function from the context\r\n    \r\n    const [title, setTitle] = useState('');              // state to store the title input value   \r\n    const [auther, setAuther] = useState('');             // state to store the auther input value \r\n\r\n    const handleSubmit =(e)=>{           // prevent refresh & pass the data to the function & clear the inputs\r\n        e.preventDefault();\r\n        addBooks(title,auther);\r\n        setTitle('');\r\n        setAuther('');        \r\n    }\r\n \r\n    return (                    // form to add new book by calling (handleSubmit) & set the values by oncahnge\r\n   <form className=\"addForm\" onSubmit={handleSubmit}>\r\n       <input type=\"text\" placeholder=\"Enter title ...\"  value={title}\r\n       onChange={(e)=>setTitle(e.target.value)} required />\r\n       <input type=\"text\" placeholder=\"Enter auther's name ...\"  value={auther}\r\n       onChange={(e)=>setAuther(e.target.value)} required />\r\n       <input type=\"submit\" value=\"Add Book\" className=\"addButton\"/>\r\n   </form>\r\n  );\r\n};\r\n\r\nexport default BooksForm;\r\n","import React, { useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/BooksContext\";\r\n\r\nconst NavBar = () => {\r\n\r\n  const { Books } = useContext(BooksContext);        //get the state from the context\r\n\r\n  return (           //show a welcome message & return the number of books inside the state  \r\n    <nav>\r\n      <h1>Welcome to your books reading list</h1>\r\n      <h4>You have <span>{Books.length}</span> Books on your reading list</h4>\r\n      <hr></hr>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport './App.css';\nimport BooksList from './components/BooksList';\nimport BooksForm from './components/BooksForm';\nimport NavBar from './components/NavBar';\nimport BooksContextProvider from './contexts/BooksContext';\n\n\n//wrap componets with the context & send them so they got rendered at index.html \nfunction App() {\n  return (\n    <div className=\"App\">\n      <BooksContextProvider>\n        <NavBar />\n        <BooksForm />\n        <BooksList />      \n      </BooksContextProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <React.StrictMode><App /></React.StrictMode>, document.getElementById('root') );\n\n"],"sourceRoot":""}